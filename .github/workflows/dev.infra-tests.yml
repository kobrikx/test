name: "[dev] Infra Tests"
defaults:
  run:
    shell: bash
env:
  AWS_REGION: us-east-1
  ENV: dev
  SSH_PUBLIC_KEY: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCwxmgt3sp18q+4GQ0t29jYDma3IUfXwKXDqSqMdv7KoPUVCwx/Hhy7VlMUN+B+s5LlPSrdlmUphCaU9gPoFw7dvIkGGBPxlUJs8Neny0V6U8fHsAxOqExAS0zFaQZehUbOCwR/W5BtfR11nhpMmzNbBDSiCEW2i4eLausSAJCTY8FhR/Z+5j6RJt/saS8eHOhOprsrPUAzlxm7cI9uWgr2XnTXwOk8ImbXNMIas6HY7EMyKknOvRdvuTffuo3uoSbW0jElruCo4FXMG9alm68Umoz0GYp1nWJdtN32df9yxKgEfN/fXbt9bb1KjSMIPND3HT//YUIGv34OoQ5U/oZlEKILVw21R9joeA99c23PQenqCxMVgxtPouOmJW4saN/L1RsW7Pa+ZonyEGRtnE+LO+CxNfypA9kYP91hNGjXUgtM7aAiM/wBxPPuDKRtEnESZmzG/gJnGGdhmemHcbw8VR2WhLsRpioo9mpK8w90d+otpSbh9YZVYhxHuFPr47s= dev-nopk"
  IZE_LOG_LEVEL: debug
  IZE_PLAIN_TEXT: true
  IZE_VERSION: 1.1.12

on:
  pull_request:
#    branches:
#      - develop
#    paths:
#      - '.infra/**'

jobs:
  labeler:
    name: Add PR Labels
    runs-on: ubuntu-latest
    steps:
      - name: Label PRs with Service
        uses: TinkurLab/monorepo-pr-labeler-action@4.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_DIRS: 'apps'
        with:
          prefix: '🏷️ Service:'

      - name: Label PRs with Infra Changes
        uses: TinkurLab/monorepo-pr-labeler-action@4.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_DIRS: '.infra/env'
        with:
          prefix: '🏷️ Infra:'

      - name: Label PRs with Docs
        uses: TinkurLab/monorepo-pr-labeler-action@4.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_DIRS: '.infra/docs'
        with:
          prefix: '🏷️ Docs:'

      - name: Label PRs with Internal Terraform
        uses: TinkurLab/monorepo-pr-labeler-action@4.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_DIRS: '.infra/terraform'
        with:
          prefix: '🏷️ Terraform:'

  infra_changes: # Get changes in the monorepo
    name: Detect Infra Repo Changes
    runs-on: ubuntu-latest
    timeout-minutes: 60

    # Set job outputs to values from filter step
    outputs:
      infra: ${{ steps.filter.outputs.infra }}
    steps:
      - uses: actions/checkout@v4
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          # Filters stored in own yaml file
          filters: '.github/filters.yml'

  # Perform tests on pull requests
  terraform_linter:
    name: Infra Terraform Linter
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Ize Setup
        uses: hazelops/action-setup-ize@1.0.1
        with:
          version: ${{ env.IZE_VERSION }}

      - name: Create AWS Profile
        run: |
          ize gen aws-profile
          sudo apt install -y tini

      - name: Deploy Infra
        run: |
          exec tini -s -g -- ize terraform init    

      - name: Tflint Report Output
        uses: reviewdog/action-tflint@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          working_directory: ".infra/env/${{ env.ENV }}"
          reporter: github-pr-review
          fail_on_error: "true"
          filter_mode: "nofilter"
          flags: "--module"

  yaml_linter:
    name: Apps Yaml Linter
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
#          aws-region: ${{ env.AWS_REGION }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true

#      - name: Create AWS Profile
#        run: make aws.profile
#
#      - name: Terraform Init
#        run: make terraform.init

#      - name: Tflint Report Output
#        uses: reviewdog/action-tflint@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          working_directory: ".infra/env/${{ env.ENV }}"
#          reporter: github-pr-review
#          fail_on_error: "true"
#          filter_mode: "nofilter"
#          flags: "--module"

      - name: yamllint
        uses: reviewdog/action-yamllint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review # Change reporter.
          fail_on_error: "true"
          filter_mode: "nofilter"
          yamllint_flags: 'apps/'


  infra_spellcheck:
    name: Infra Spellcheck
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: ReviewDog Spellchecker
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ github.token }}
          locale: "US"
          level: "warning"
          pattern: |
            *.tf
            *.md
          reporter: github-pr-review
          filter_mode: "nofilter"





  terraform_plan:
    name: Create Terraform Plan
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs:
      - infra_changes
    if: ${{ needs.infra_changes.outputs.infra == 'true' }}
    env:
      SHORT_SHA: ${GITHUB_SHA}
      GITHUB_ACTOR: ${GITHUB_ACTOR}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Checkout Code for Commit Message
        uses: actions/checkout@v4
        with:
          submodules: true
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get Commit Message
        run: |
          MSG=$(git log --format=%B -n 1 ${{ github.event.after }})
          echo "COMMIT_MESSAGE=${MSG}" >> $GITHUB_ENV

      - name: Checkout Code for Infra Plan
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Create AWS Profile
        run: make aws.profile

      - name: Infra Plan
        run: make terraform.plan
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: results
          path: .infra/env/${{ env.ENV }}/.terraform/tfplan.md
          overwrite: true

      - uses: actions/download-artifact@v4
        with:
          name: results
      - name: comment PR
        uses: machine-learning-apps/pr-comment@master
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          path: results/tfplan.md
